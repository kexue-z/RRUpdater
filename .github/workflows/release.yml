name: Release
on:
  push:
    tags:
      - "v*"
env:
  CRATE_NAME: rr_updater

jobs:
  compile:
    name: Compile
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            release_name: x86_64-linux-gnu
            postfix: ""
            extra_args: ""
            cross: false

          # Windows GNU
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            release_name: x86_64-windows-gnu.exe
            postfix: ".exe"
            extra_args: ""
            cross: true

    steps:
      - uses: actions/checkout@v2

      - name: Resume cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.target }}-release-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ matrix.target }}-release

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --target ${{ matrix.target }} --package server --package client ${{ matrix.extra_args }}

      - name: Rename binary
        run: mv target/${{ matrix.target }}/release/server${{ matrix.postfix }} rrus-${{ matrix.release_name }}

      - name: Rename binary
        run: mv target/${{ matrix.target }}/release/client${{ matrix.postfix }} rruc-${{ matrix.release_name }}

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: compile
          path: |
            rrus-${{ matrix.release_name }}
            rruc-${{ matrix.release_name }}

  release:
    name: Release
    needs: [compile]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: compile
          path: ./packages

      - name: Compress
        run: bash ./.github/compress.sh

      - name: Github release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            packages/*
            LICENSE
